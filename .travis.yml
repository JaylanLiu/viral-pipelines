dist: bionic
os: linux

git:
  depth: 150

env:
  global:
  - CACHE_DIR="$HOME/misc_cache"
  - MINICONDA_DIR="$HOME/miniconda"
  - CONDA_DEFAULT_ENV="$HOME/misc_cache/default_env"
  - PYTHONIOENCODING=UTF8
  - BOTO_CONFIG=/dev/null # bogus value to override config on travis
  - DOCKER_REGISTRY="quay.io"
  - DOCKER_REPO_PROD="quay.io/broadinstitute/viral-pipelines"
  - DOCKER_REPO_DEV="quay.io/broadinstitute/viral-pipelines-dev"
  - MODULE_VERSIONS="requirements-modules.txt"

cache:
  directories:
    - $HOME/misc_cache
    - $HOME/miniconda
  timeout: 1000

stages:
  - validate
  - build

jobs:
  fast_finish: true
  include:
    - language: python
      stage: validate
      env:
        - TRAVIS_JOB=validate_wdl_miniwdl
      install:
        - set -e
        - source travis/install-conda.sh
        - conda install -y miniwdl shellcheck
      script:
        - set -e
        - travis/version-wdl-runtimes.sh
        - miniwdl check pipes/WDL/workflows/*.wdl

    - language: java
      jdk: openjdk11
      stage: validate
      env:
        - TRAVIS_JOB=validate_wdl_womtool
      install:
        - travis/install-wdl.sh
      script:
        - set -e
        - travis/version-wdl-runtimes.sh
        - travis/validate-wdl-womtool.sh

    - language: python
      stage:    validate
      env:      TRAVIS_JOB=test_docs
      install:  travis/install-pip-docs.sh
      script:   travis/build-docs.sh
      ## note: this build_docs job does not actually produce the output on readthedocs
      ## readthedocs does its own build trigger. this travis job exists simply to alert us
      ## of build failures of the docs because otherwise we would never know.

    - language: java
      jdk: openjdk11
      stage: build
      env:
        - TRAVIS_JOB=test_cromwell
      install:
        - travis/install-wdl.sh
      script:
        - set -e
        - travis/version-wdl-runtimes.sh
        - travis/relative-wdl-paths.sh
        - travis/tests-cromwell.sh

    - language: python
      stage: build
      env:
        - TRAVIS_JOB=test_miniwdl
      install:
        - set -e
        - source travis/install-conda.sh
        - conda install -y miniwdl shellcheck jq
      script:
        - set -e
        - travis/version-wdl-runtimes.sh
        - travis/tests-miniwdl.sh

    - language: java
      jdk: openjdk11
      stage: build
      env:
        - TRAVIS_JOB=deploy_dnanexus
        # DX_API_TOKEN (for DNAnexus builds) -- token #3, expires 12/31/2024
        - secure: "zAAxwXWwSDcwnLYHawc0+gbshV3UURAZWSyk8g99kXgFCRcgytacvUpRxd44mC+rlgL2RtS8+RPT11hO2zJ+4y0J0FBaC8d9R7aTzEAGKLHk11cfhMg63QMVBt/8Gz9HToeE0BJ8/JbNZr+IZ01dD8GNDRA4FcFj+8maTpp4nrQ5/leDdmUwzkV1XfMiE+0/wR3KttKvqzHy6+6gRTAKbTeSxPICvWpHKlIYkIxFcEoH+3SNxgwWU9jZqG29MRt3/ikzZMBW/T2O9g+tY/5vKRqxm9aqWChFgjrpWRZDwvZqvwdxizokoVfReLZES3Ls//YSKzfFJG2GZ6a2vhAbfjcUkbRnyPOcZPwK+sE91Pq7FgFwL4N8BV63j6GQ5VrHZxe0b6spw8gvlkEjjhBgN1178lcxnp75QANNJ8AprZBqi3MzTQOTlgRZRAsDWTLgpXODrcDib76pg3af+JK5PQb0ncRVps9Z09u2EJ8fk9MGCDB6iw7XFedPPCxlx6MyIp2ywF4v9mkQXUBafYo67KRyPaojUUDGFkJsylYxzGHvvp0PrU93cp8zvDg4NqUkrbgEdGVvPF+qmXxT9MpfLc/yZ4vfhtKfZuQUGmNw+5WfTa3RYbJDEowN6noWCdXBZ67SrusKrok3TxIJV25vxXrFVhD/u/3ermysu7xA9ss="
        - DX_PROJECT=project-F8PQ6380xf5bK0Qk0YPjB17P
      install:
        - travis/install-wdl.sh
      script:
        - set -e
        - travis/version-wdl-runtimes.sh
        - travis/relative-wdl-paths.sh
        - travis/build-dx.sh
        - travis/tests-dx.sh

    - language: python
      stage: build
      env:
        - TRAVIS_JOB=deploy_gcs
      script: skip
      before_deploy:
        - set -e
        - openssl aes-256-cbc -K $encrypted_6def3e87f286_key -iv $encrypted_6def3e87f286_iv -in travis/viral-ngs-wdl.json.enc -out travis/viral-ngs-wdl.json -d
        - export DEST_DIR=`travis/list-docker-tags.sh | tail -1 | sed 's/:/\//'`
        - source travis/install-conda.sh
        - conda install -y miniwdl
        - travis/version-wdl-runtimes.sh
        - travis/flatten-wdls.sh
      deploy:
          provider:   gcs
          edge:       true
          key_file:   travis/viral-ngs-wdl.json
          bucket:     viral-ngs-wdl
          local_dir:  pipes/WDL/flattened
          upload_dir: "$DEST_DIR"
          acl:        public-read
          on:
              all_branches: true

    - language: python
      stage: build
      env:
        - TRAVIS_JOB=deploy_github_staging
      install:
        - set -e
        - source travis/install-conda.sh
        - conda install -y miniwdl
        - travis/version-wdl-runtimes.sh
        - travis/flatten-wdls.sh
        - openssl aes-256-cbc -K $encrypted_fb18189f5cc1_key -iv $encrypted_fb18189f5cc1_iv -in travis/github-deploy-id_rsa.enc -out travis/github-deploy-id_rsa -d
        - chmod 400 travis/github-deploy-id_rsa
        - echo "Host github.com" > ~/.ssh/config
        - echo "  IdentityFile  $(pwd)/travis/github-deploy-id_rsa" >> ~/.ssh/config
      script:
        - if [ -n "$TRAVIS_PULL_REQUEST" ]; then exit 0; fi
        - set -e
        - git clone git@github.com:broadinstitute/viral-ngs-staging.git
        - cd viral-ngs-staging
        - git checkout -b $TRAVIS_BRANCH
        - rm -rf *; cp -a ../pipes ../travis/github-staging/* .
        - echo "version: 1.2" > .dockstore.yml; echo "workflows:" >> .dockstore.yml
        - for WDL in pipes/WDL/flattened/*.wdl; do echo " - name: $(basename $WDL .wdl)" >> .dockstore.yml ; echo "   subclass: WDL" >> .dockstore.yml ; echo "   primaryDescriptorPath: $WDL" >> .dockstore.yml ; done
        - git add -A -f
        - git commit -m "CI push github.com/broadinstitute/viral-pipelines:$( travis/list-docker-tags.sh | tail -1 )"
        - for TAG in $( travis/list-docker-tags.sh | cut -f 2 -d : ); do git tag $TAG; done
        - git push -f -u origin $TRAVIS_BRANCH
        - git push origin --tags

    #- language: python
    #  stage: build
    #  env:
    #    - TRAVIS_JOB=deploy_github
    #  before_deploy:
    #    - set -e
    #    - source travis/install-conda.sh
    #    - conda install -y miniwdl
    #    - travis/version-wdl-runtimes.sh
    #    - travis/flatten-wdls.sh
    #  deploy:
    #      provider:  releases
    #      edge:      true
    #      token:     "$GITHUB_OAUTH_TOKEN"
    #      file: pipes/WDL/flattened/*.wdl
    #      on:
    #        tags: true


